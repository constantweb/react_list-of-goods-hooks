{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortField","goodsFromServer","App","useState","None","sortField","setSortField","reverse","setReverse","visibleGoods","goods","sortedGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","getPrepareGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,SAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAoBH,EAAUI,MAAhE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,EA/BR,SACEC,EADF,GAGY,IADRL,EACO,EADPA,UAAWE,EACJ,EADIA,QAEPI,EAAW,YAAOD,GAqBxB,OAnBIL,IAAcL,EAAUI,MAC1BO,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EAAUe,SACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAAUiB,OACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAYJ,UAGPI,EAMcQ,CAAgBlB,EAAiB,CAAEI,YAAWE,YAEnE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcL,EAAUe,WAEtCQ,QAAS,WACPjB,EAAaN,EAAUe,WAN3B,iCAYA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAcL,EAAUiB,SAEtCM,QAAS,WACPjB,EAAaN,EAAUiB,SAN3B,4BAYA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAYD,IAL7B,qBAUA,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,GAAW,GACXF,EAAaN,EAAUI,OAL3B,sBAYF,6BAEIK,EAAae,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YChHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ae29266.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortField {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  None = '',\n}\n\ntype SortOptions = {\n  sortField: SortField | null;\n  reverse: boolean;\n};\n\nfunction getPrepareGoods(\n  goods: string[],\n  { sortField, reverse }: SortOptions,\n):string[] {\n  const sortedGoods = [...goods];\n\n  if (sortField !== SortField.None) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortField.Alphabet:\n          return good1.localeCompare(good2);\n\n        case SortField.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortField>(SortField.None);\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getPrepareGoods(goodsFromServer, { sortField, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortField.Alphabet,\n          })}\n          onClick={() => {\n            setSortField(SortField.Alphabet);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortField.Length,\n          })}\n          onClick={() => {\n            setSortField(SortField.Length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverse,\n          })}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setReverse(false);\n            setSortField(SortField.None);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}